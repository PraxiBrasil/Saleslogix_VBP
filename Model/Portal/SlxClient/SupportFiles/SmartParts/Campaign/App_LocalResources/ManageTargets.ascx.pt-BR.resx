<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblCaption.Text" xml:space="preserve">
    <value>Selecione o alvo dos Leads e Contatos do cliente para essa campanha.</value>
  </data>
  <data name="lblIncludeType.Caption" xml:space="preserve">
    <value>Incluir:</value>
  </data>
  <data name="rdgIncludeType_Contacts.Value" xml:space="preserve">
    <value>Contatos</value>
  </data>
  <data name="rdgIncludeType_Contacts.Text" xml:space="preserve">
    <value>Contatos (individual)</value>
  </data>
  <data name="rdgIncludeType_AccountsAll.Value" xml:space="preserve">
    <value>Contatos Conta</value>
  </data>
  <data name="rdgIncludeType_AccountsAll.Text" xml:space="preserve">
    <value>Contas (todos os Contatos)</value>
  </data>
  <data name="rdgIncludeType_Accounts.Value" xml:space="preserve">
    <value>Conta Primária</value>
  </data>
  <data name="rdgIncludeType_Accounts.Text" xml:space="preserve">
    <value>Contas (Somente Contato Primário)</value>
  </data>
  <data name="rdgIncludeType_Leads.Value" xml:space="preserve">
    <value>Leads</value>
  </data>
  <data name="rdgIncludeType_Leads.Text" xml:space="preserve">
    <value>Leads (não qualificados)</value>
  </data>
  <data name="cboCompany.Caption" xml:space="preserve">
    <value />
  </data>
  <data name="pklIndustry.Caption" xml:space="preserve">
    <value />
  </data>
  <data name="cboSIC.Caption" xml:space="preserve">
    <value />
  </data>
  <data name="chkTitle.Caption" xml:space="preserve">
    <value>Título:</value>
  </data>
  <data name="chkProducts.Caption" xml:space="preserve">
    <value>Produtos que possui:</value>
  </data>
  <data name="chkStatus.Caption" xml:space="preserve">
    <value>Status:</value>
  </data>
  <data name="lblDoNotIncludes.Text" xml:space="preserve">
    <value />
  </data>
  <data name="lblDoNotIncludes.Caption" xml:space="preserve">
    <value>Incluir:</value>
  </data>
  <data name="chkSolicit.Caption" xml:space="preserve">
    <value>Não Solicitar</value>
  </data>
  <data name="chkEmail.Caption" xml:space="preserve">
    <value>Não Enviar Email</value>
  </data>
  <data name="chkFax.Caption" xml:space="preserve">
    <value>Não Enviar Fax</value>
  </data>
  <data name="chkMail.Caption" xml:space="preserve">
    <value>Não Env.Carta</value>
  </data>
  <data name="chkCall.Caption" xml:space="preserve">
    <value>Não Chamar</value>
  </data>
  <data name="filter_GreaterThan.Value" xml:space="preserve">
    <value>Maior que</value>
  </data>
  <data name="filter_GreaterThan.Text" xml:space="preserve">
    <value>Maior que</value>
  </data>
  <data name="filter_LessThan.Value" xml:space="preserve">
    <value>Menor que</value>
  </data>
  <data name="filter_LessThan.Text" xml:space="preserve">
    <value>Menor que</value>
  </data>
  <data name="filter_EqualGreaterThan.Value" xml:space="preserve">
    <value>Igual ou Maior que</value>
  </data>
  <data name="filter_EqualGreaterThan.Text" xml:space="preserve">
    <value>Igual ou Maior que</value>
  </data>
  <data name="filter_EqualLessThan.Value" xml:space="preserve">
    <value>Igual o Menor que</value>
  </data>
  <data name="filter_EqualLessThan.Text" xml:space="preserve">
    <value>Igual ou Menor que</value>
  </data>
  <data name="filter_NotEqualTo.Value" xml:space="preserve">
    <value>Não é igual a</value>
  </data>
  <data name="filter_NotEqualTo.Text" xml:space="preserve">
    <value>Não é igual a</value>
  </data>
  <data name="filter_EqualTo.Value" xml:space="preserve">
    <value>Igual a</value>
  </data>
  <data name="filter_EqualTo.Text" xml:space="preserve">
    <value>Igual a</value>
  </data>
  <data name="filter_Contains.Value" xml:space="preserve">
    <value>Contém</value>
  </data>
  <data name="filter_Contains.Text" xml:space="preserve">
    <value>Contém</value>
  </data>
  <data name="filter_StartingWith.Value" xml:space="preserve">
    <value>Começando com</value>
  </data>
  <data name="filter_StartingWith.Text" xml:space="preserve">
    <value>Começando com</value>
  </data>
  <data name="lueProducts.LookupProperties.ActualId.PropertyHeader" xml:space="preserve">
    <value>Código do Produto</value>
  </data>
  <data name="lueProducts.LookupProperties.Name.PropertyHeader" xml:space="preserve">
    <value>Nome do Produto</value>
  </data>
  <data name="lueProducts.LookupProperties.Vendor.PropertyHeader" xml:space="preserve">
    <value>Vendedor</value>
  </data>
  <data name="lueProducts.LookupProperties..PropertyHeader" xml:space="preserve">
    <value />
  </data>
  <data name="chkCity.Caption" xml:space="preserve">
    <value>Cidade</value>
  </data>
  <data name="chkState.Caption" xml:space="preserve">
    <value>Estado:</value>
  </data>
  <data name="chkZip.Caption" xml:space="preserve">
    <value>Código Postal:</value>
  </data>
  <data name="chkLeadSource.Caption" xml:space="preserve">
    <value>Origem do Lead:</value>
  </data>
  <data name="chkImportSource.Caption" xml:space="preserve">
    <value>Fonte de Importação:</value>
  </data>
  <data name="chkCreateDate.Caption" xml:space="preserve">
    <value>Data de Criação</value>
  </data>
  <data name="cmdHowMany.Caption" xml:space="preserve">
    <value>Quantos?</value>
  </data>
  <data name="cmdSearch.Caption" xml:space="preserve">
    <value>Buscar</value>
  </data>
  <data name="cmdClearAll.Caption" xml:space="preserve">
    <value>Limpar Todos</value>
  </data>
  <data name="txtCity4.Caption" xml:space="preserve">
    <value />
  </data>
  <data name="lueLeadSource.LookupProperties.Type.PropertyHeader" xml:space="preserve">
    <value>Tipo</value>
  </data>
  <data name="lueLeadSource.LookupProperties.Description.PropertyHeader" xml:space="preserve">
    <value>Descrição</value>
  </data>
  <data name="lueLeadSource.LookupProperties.AbbrevDescription.PropertyHeader" xml:space="preserve">
    <value>Código de Origem</value>
  </data>
  <data name="lueLeadSource.LookupProperties..PropertyHeader" xml:space="preserve">
    <value />
  </data>
  <data name="dtpCreateToDate.Caption" xml:space="preserve">
    <value>para</value>
  </data>
  <data name="cmdAdd.Caption" xml:space="preserve">
    <value>Adicionar Objetivos</value>
  </data>
  <data name="cmdCancel.Caption" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="grdTargets.FirstName.ColumnHeading" xml:space="preserve">
    <value>Primeiro Nome</value>
  </data>
  <data name="grdTargets.LastName.ColumnHeading" xml:space="preserve">
    <value>Sobrenome</value>
  </data>
  <data name="grdTargets.Company.ColumnHeading" xml:space="preserve">
    <value>Empresa</value>
  </data>
  <data name="grdTargets.Email.ColumnHeading" xml:space="preserve">
    <value>E-Mail</value>
  </data>
  <data name="grdTargets.City.ColumnHeading" xml:space="preserve">
    <value>Cidade</value>
  </data>
  <data name="grdTargets.State.ColumnHeading" xml:space="preserve">
    <value>Estado</value>
  </data>
  <data name="grdTargets.Zip.ColumnHeading" xml:space="preserve">
    <value>Cep</value>
  </data>
  <data name="grdTargets.WorkPhone.ColumnHeading" xml:space="preserve">
    <value>Telefone Comercial</value>
  </data>
  <data name="chkCompany.Caption" xml:space="preserve">
    <value>Nome da Empresa</value>
  </data>
  <data name="chkIndustry.Caption" xml:space="preserve">
    <value>Indústria</value>
  </data>
  <data name="chkSIC.Caption" xml:space="preserve">
    <value>SIC:</value>
  </data>
  <data name="grdTargets.EmptyTableRowText" xml:space="preserve">
    <value>Não existem registos que correspondem aos critérios de seleção.</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="ManageTargets_ClientScript" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>ManageTargets_ClientScript.js;System.String, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;Windows-1252</value>
  </data>
  <data name="HowManyTargets_Msg" xml:space="preserve">
    <value>{0} objetivos</value>
  </data>
  <data name="error_NoTargetsSelected" xml:space="preserve">
    <value>Você deve ter pelo menos um alvo selecionado antes de continuar.</value>
  </data>
  <data name="error_NoDataSource" xml:space="preserve">
    <value>Não foi possível obter fonte de dados.</value>
  </data>
  <data name="lblFailed.Caption" xml:space="preserve">
    <value>Falha:</value>
  </data>
  <data name="lblInserted.Caption" xml:space="preserve">
    <value>Inserida:</value>
  </data>
  <data name="lblPrimary.Caption" xml:space="preserve">
    <value>Metas de Inserção ...</value>
  </data>
  <data name="tabAddFromGroup.Caption" xml:space="preserve">
    <value>Adicionar do Grupo</value>
  </data>
  <data name="tabLookupTarget.Caption" xml:space="preserve">
    <value>Buscar Objetivos</value>
  </data>
  <data name="lblAddFromGroup.Text" xml:space="preserve">
    <value>Selecionar o alvo de ligações ou contatos com os clientes para esta campanha de um grupo existente.</value>
  </data>
  <data name="rdgContactGroup.Text" xml:space="preserve">
    <value>Grupo do Contato</value>
  </data>
  <data name="rdgContactGroup.Value" xml:space="preserve">
    <value>Contato</value>
  </data>
  <data name="rdgLeadGroup.Text" xml:space="preserve">
    <value>Grupo do Lead:</value>
  </data>
  <data name="rdgLeadGroup.Value" xml:space="preserve">
    <value>Lead</value>
  </data>
  <data name="error_NoGroupSelected" xml:space="preserve">
    <value>Por favor, selecione um grupo antes de continuar.</value>
  </data>
  <data name="LeadSource.LUPF.Status" xml:space="preserve">
    <value>Ativo</value>
  </data>
  <data name="QueryError" xml:space="preserve">
    <value>Ocorreu um erro com a pesquisa.</value>
  </data>
  <data name="QueryErrorInvalidParameter" xml:space="preserve">
    <value>Um dos parâmetros de consulta não estava correto. Isso pode ser porque um nome de propriedade entidade mudou.</value>
  </data>
</root>